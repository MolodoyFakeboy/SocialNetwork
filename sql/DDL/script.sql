-- MySQL Script generated by MySQL Workbench
-- Thu Sep  9 18:47:42 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema NetworkSocial
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema NetworkSocial
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `NetworkSocial` DEFAULT CHARACTER SET utf8 ;
USE `NetworkSocial` ;

-- -----------------------------------------------------
-- Table `NetworkSocial`.`Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Role` (
  `idRole` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idRole`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`User` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(100) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `birthday` DATE NOT NULL,
  `Role_idRole` INT NOT NULL,
  `Bio` TEXT NULL,
  PRIMARY KEY (`idUser`, `Role_idRole`),
  INDEX `fk_User_Role1_idx` (`Role_idRole` ASC) VISIBLE,
  CONSTRAINT `fk_User_Role1`
    FOREIGN KEY (`Role_idRole`)
    REFERENCES `NetworkSocial`.`Role` (`idRole`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Post` (
  `idPost` INT NOT NULL AUTO_INCREMENT,
  `createdDate` DATETIME NOT NULL,
  `title` TEXT NOT NULL,
  `User_idUser` INT NOT NULL,
  PRIMARY KEY (`idPost`, `User_idUser`),
  INDEX `fk_Post_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_Post_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `NetworkSocial`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Publication`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Publication` (
  `idPublication` INT NOT NULL AUTO_INCREMENT,
  `createTime` DATETIME NOT NULL,
  `Information` TEXT NOT NULL,
  PRIMARY KEY (`idPublication`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Image` (
  `idImage` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Photo` BLOB NOT NULL,
  `Publication_idPublication` INT NOT NULL,
  PRIMARY KEY (`idImage`, `Publication_idPublication`),
  INDEX `fk_Image_Publication1_idx` (`Publication_idPublication` ASC) VISIBLE,
  CONSTRAINT `fk_Image_Publication1`
    FOREIGN KEY (`Publication_idPublication`)
    REFERENCES `NetworkSocial`.`Publication` (`idPublication`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Friends`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Friends` (
  `User_idUser` INT NOT NULL,
  `User_idFrend` INT NOT NULL,
  PRIMARY KEY (`User_idUser`, `User_idFrend`),
  INDEX `fk_User_has_User_User2_idx` (`User_idFrend` ASC) VISIBLE,
  INDEX `fk_User_has_User_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_User_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `NetworkSocial`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_User_User2`
    FOREIGN KEY (`User_idFrend`)
    REFERENCES `NetworkSocial`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Public`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Public` (
  `publicID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT NULL,
  `number_subscribers` INT NULL,
  PRIMARY KEY (`publicID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Chat` (
  `idChat` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idChat`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Message` (
  `idMessage` INT NOT NULL AUTO_INCREMENT,
  `SendText` TEXT NOT NULL,
  `SendTime` TIMESTAMP NOT NULL,
  `Chat_idChat` INT NOT NULL,
  `User_idUser` INT NOT NULL,
  PRIMARY KEY (`idMessage`, `Chat_idChat`, `User_idUser`),
  INDEX `fk_Message_Chat1_idx` (`Chat_idChat` ASC) VISIBLE,
  INDEX `fk_Message_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_Message_Chat1`
    FOREIGN KEY (`Chat_idChat`)
    REFERENCES `NetworkSocial`.`Chat` (`idChat`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Message_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `NetworkSocial`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`User_has_Chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`User_has_Chat` (
  `User_idUser` INT NOT NULL,
  `Chat_idChat` INT NOT NULL,
  PRIMARY KEY (`User_idUser`, `Chat_idChat`),
  INDEX `fk_User_has_Chat_Chat1_idx` (`Chat_idChat` ASC) VISIBLE,
  INDEX `fk_User_has_Chat_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Chat_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `NetworkSocial`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Chat_Chat1`
    FOREIGN KEY (`Chat_idChat`)
    REFERENCES `NetworkSocial`.`Chat` (`idChat`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Group_has_Publication`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Group_has_Publication` (
  `Group_idGroup` INT NOT NULL,
  `Publication_idPublication` INT NOT NULL,
  PRIMARY KEY (`Group_idGroup`, `Publication_idPublication`),
  INDEX `fk_Group_has_Publication_Publication1_idx` (`Publication_idPublication` ASC) VISIBLE,
  INDEX `fk_Group_has_Publication_Group1_idx` (`Group_idGroup` ASC) VISIBLE,
  CONSTRAINT `fk_Group_has_Publication_Group1`
    FOREIGN KEY (`Group_idGroup`)
    REFERENCES `NetworkSocial`.`Public` (`publicID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Group_has_Publication_Publication1`
    FOREIGN KEY (`Publication_idPublication`)
    REFERENCES `NetworkSocial`.`Publication` (`idPublication`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`User_has_Public`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`User_has_Public` (
  `User_idUser` INT NOT NULL,
  `Public_publicID` INT NOT NULL,
  PRIMARY KEY (`User_idUser`, `Public_publicID`),
  INDEX `fk_User_has_Public_Public1_idx` (`Public_publicID` ASC) VISIBLE,
  INDEX `fk_User_has_Public_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Public_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `NetworkSocial`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Public_Public1`
    FOREIGN KEY (`Public_publicID`)
    REFERENCES `NetworkSocial`.`Public` (`publicID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NetworkSocial`.`Comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NetworkSocial`.`Comment` (
  `idComment` INT NOT NULL AUTO_INCREMENT,
  `Message` TEXT NOT NULL,
  `createTime` DATETIME NOT NULL,
  `User_idUser` INT NOT NULL,
  `Publication_idPublication` INT NOT NULL,
  PRIMARY KEY (`idComment`, `Publication_idPublication`, `User_idUser`),
  INDEX `fk_Comment_User1_idx` (`User_idUser` ASC) VISIBLE,
  INDEX `fk_Comment_Publication1_idx` (`Publication_idPublication` ASC) VISIBLE,
  CONSTRAINT `fk_Comment_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `NetworkSocial`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comment_Publication1`
    FOREIGN KEY (`Publication_idPublication`)
    REFERENCES `NetworkSocial`.`Publication` (`idPublication`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
